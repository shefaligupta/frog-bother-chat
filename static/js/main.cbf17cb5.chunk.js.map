{
  "version": 3,
  "sources": [
    "components/HenchmenList.js",
    "components/ChatHistory.js",
    "components/App.js",
    "index.js"
  ],
  "names": [
    "HenchmenList",
    "setHenchman",
    "man",
    "className",
    "map",
    "henchman",
    "key",
    "Button",
    "variant",
    "disableElevation",
    "onClick",
    "ChatHistory",
    "chatHistory",
    "messagesEndRef",
    "useRef",
    "useEffect",
    "current",
    "scrollIntoView",
    "behavior",
    "length",
    "chat",
    "timePeriod",
    "message",
    "ref",
    "App",
    "useState",
    "setMessage",
    "Map",
    "setChat",
    "inputEl",
    "sendMessage",
    "newMessage",
    "Date",
    "toUTCString",
    "chatForHenchman",
    "get",
    "draft",
    "history",
    "set",
    "setHenchmanAndFocus",
    "name",
    "focus",
    "alt",
    "undefined",
    "getChatHistory",
    "TextField",
    "value",
    "label",
    "aria-labelledby",
    "onChange",
    "event",
    "target",
    "setChatDraftForHenchman",
    "onKeyPress",
    "sendMessageOnEnter",
    "inputRef",
    "disabled",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.cbf17cb5.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n/**\n * HenchmenList class.\n * @param {Function} setHenchman\n * @param {string} man\n * @returns {*}\n * @constructor\n */\nconst HenchmenList = ({setHenchman, man}) => {\n  const allHenchmen = ['Sonny', 'Fredo', 'Michael'];\n  return (\n      <div className=\"henchman\">\n        {\n          allHenchmen.map((henchman) => (\n              <div key={`Henchman-${henchman}`} className=\"button-henchmen\">\n                <Button\n                    variant=\"contained\"\n                    className={man === henchman ? 'active-button' : 'select-henchman'}\n                    disableElevation\n                    onClick={() => setHenchman(henchman)}\n                >\n                  {henchman}\n                </Button>\n              </div>\n          ))\n        }\n      </div>\n  );\n};\n\nexport default HenchmenList;\n",
    "import React, {useEffect, useRef} from 'react';\n\n/**\n * ChatHistory Class\n *\n * @param {Array} chatHistory\n * @returns {*}\n * @constructor\n */\nconst ChatHistory = ({chatHistory}) => {\n  const messagesEndRef = useRef(null);\n\n  /**\n   * scrolls to bottom of the chat history.\n   */\n  const scrollToBottom = () => {\n    if (messagesEndRef && messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({behavior: 'smooth'});\n    }\n  };\n  useEffect(scrollToBottom, [chatHistory]);\n\n  return (\n      <div className=\"chat-history\">\n        {\n          chatHistory\n          && chatHistory.length > 0\n          && chatHistory.map((chat) => (\n              <div key={`message-${chat.timePeriod}`} className=\"message\">\n                <div key={`timestamp-${chat.timePeriod}`} className=\"message-time\">{chat.timePeriod}</div>\n                <div key={`mesg-${chat.timePeriod}`}>{chat.message}</div>\n              </div>\n          ))\n        }\n        <div ref={messagesEndRef}/>\n      </div>\n  );\n};\n\nexport default ChatHistory;\n",
    "import React, {useRef, useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport '../css/App.css';\nimport HenchmenList from './HenchmenList';\nimport ChatHistory from './ChatHistory';\n\n/**\n * App Class\n * @returns {*}\n * @constructor\n */\nconst App = () => {\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState(new Map());\n  const [henchman, setHenchman] = useState('Sonny');\n\n  const inputEl = useRef(null);\n\n  /**\n   * sends the message i.e. calls the setter for chatHistory map\n   * which in turn runs the UI update.\n   */\n  const sendMessage = () => {\n    const newMessage = {\n      timePeriod: new Date().toUTCString(),\n      message,\n      henchman,\n    };\n    let chatForHenchman = chat.get(henchman) || {draft: '', history: []};\n    chatForHenchman = {\n      history: [...chatForHenchman.history, newMessage],\n      draft: '',\n    };\n    setChat(chat.set(henchman, chatForHenchman));\n    setMessage('');\n  };\n\n  /**\n   * sends message on enter.\n   *\n   * @param {Object} event\n   */\n  const sendMessageOnEnter = (event) => {\n    if (event.key === 'Enter' && henchman && message.length > 0) {\n      setMessage(event.target.value);\n      sendMessage();\n    }\n  };\n\n  /**\n   * sets henchman name and focus on message input box.\n   *\n   * @param {string} name\n   */\n  const setHenchmanAndFocus = (name) => {\n    const chatForHenchman = chat.get(name);\n    const draft = chatForHenchman ? chatForHenchman.draft : '';\n    setMessage(draft);\n    setHenchman(name);\n    inputEl.current.focus();\n  };\n\n  /**\n   * get chat history for henchman.\n   *\n   * @returns {*}\n   */\n\n  const getChatHistory = () => {\n    const chatForHenchman = chat.get(henchman);\n    return chatForHenchman ? chatForHenchman.history : undefined;\n  };\n\n  /**\n   * sets drafts message for the henchman.\n   *\n   * @param {Object} event\n   */\n  const setChatDraftForHenchman = (event) => {\n    const chatForHenchman = chat.get(henchman) || {draft: '', history: []};\n    chatForHenchman.draft = event.target.value;\n    setChat(chat.set(henchman, chatForHenchman));\n    setMessage(event.target.value);\n  };\n\n  return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <h4 className=\"app-title\">Frog Bother Chat</h4>\n          <h4>Vito Croakleone</h4>\n        </header>\n        <div className=\"chat-window\" alt=\"chat-window\">\n          <HenchmenList setHenchman={(name) => setHenchmanAndFocus(name)} man={henchman}/>\n          <ChatHistory chatHistory={getChatHistory()}/>\n        </div>\n        <div className=\"write-message\">\n          <TextField\n              className=\"type-message\"\n              value={message}\n              label=\"message-input\"\n              aria-labelledby=\"message-input\"\n              variant=\"outlined\"\n              onChange={(event) => setChatDraftForHenchman(event)}\n              onKeyPress={(event) => sendMessageOnEnter(event)}\n              inputRef={inputEl}\n          />\n          <Button\n              disableElevation\n              variant=\"contained\"\n              className=\"send-message\"\n              disabled={henchman.length === 0 || message.length === 0}\n              onClick={(event) => sendMessage(event)}\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n  );\n};\n\nexport default App;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"
  ],
  "sourceRoot": ""
}